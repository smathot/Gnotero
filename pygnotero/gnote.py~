#!/usr/bin/env python
#-*- coding:utf-8 -*-

"""
This file is part of Gnotero.

Gnotero is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Gnotero is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Gnotero.  If not, see <http://www.gnu.org/licenses/>.
"""

import os
import os.path
import subprocess
import re

def search_gnote(search_term):
	
	"""
	Searches your Gnote notes and returns
	note fragments matching the specified
	search terms (right now we use first author
	and year of publication.
	"""
	
	folder = "%s/.local/share/gnote" % os.environ["HOME"]
	
	# Check if the folder even exists
	if not os.path.exists(folder):
		return []
		
	# Compile some regexps to search for the note,
	# extract the note and remove xml tags
	p = re.compile(r"<bold>%s.*\(%d\)" % search_term, re.IGNORECASE)
	get_note = re.compile(r"<bold>%s.*?\(%d\).*?<bold>" % search_term, re.IGNORECASE and re.DOTALL)
	strip_p = re.compile('<.*?>')
	matches = []

	# Walk through all notes
	for note in os.listdir(folder):
		if note[-5:] == ".note":
			
			f = open(folder + "/" + note, "r")		
			s = f.read()
			m = p.search(s)
			
			# If a contains a match
			if m != None:
				
				# Extract the matching content
				s = s[m.span()[0]:]				
				m = get_note.search(s[:s.find("</note-content>")])				
				if m != None:
					start, end = m.span()			
				else:
					start = 0
					end = len(s)										
				match = {}
				match["note"] = note								
				pango = s[start:end]
				
				# Remove tags, strip whitespaces and highlight the
				# search terms
				pango = strip_p.sub("", pango)[:1000].strip()											
				for s in search_term:
					pango = pango.replace("%s" % s, "<b>%s</b>" % s)
								
				# Add this result to the list					
				match["preview"] = pango
				match["span"] = start, end
				match["cmd"] = "gnote --open-note=%s/%s" % (folder, note)		
				matches.append(match)
		
	if len(matches) > 0:
		print "%d notes found matching %s" % (len(matches), search_term)
		
	return matches			
		
		
		

